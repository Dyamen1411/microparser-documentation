.TH "include/prod.h" 3 "renderobj" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/prod.h \- The LR rule definition\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'lr_stack\&.h'\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBe_prod_id\fP \fBt_prod_id\fP"
.br
.ti -1c
.RI "typedef void *(* \fBt_prod_cb\fP) (\fBt_lr_stack_item\fP *item)"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBe_prod_id\fP { \fBPROD_COMMAND\fP, \fBPROD_COMMAND_SIMPLE__1\fP, \fBPROD_COMMAND_SIMPLE__2\fP, \fBPROD_ARGS__1\fP, \fBPROD_ARGS__2\fP, \fBPROD_PROGNAME\fP, \fBPROD_COMMAND_IO__1\fP, \fBPROD_COMMAND_IO__2\fP, \fBPROD_IO_INFO\fP, \fBPROD__COUNT\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fB_prod_command_cb\fP (\fBt_lr_stack_item\fP *item)"
.br
.ti -1c
.RI "void * \fB_prod_command_simple__1_cb\fP (\fBt_lr_stack_item\fP *item)"
.br
.ti -1c
.RI "void * \fB_prod_command_simple__2_cb\fP (\fBt_lr_stack_item\fP *item)"
.br
.ti -1c
.RI "void * \fB_prod_args__1_cb\fP (\fBt_lr_stack_item\fP *item)"
.br
.ti -1c
.RI "void * \fB_prod_args__2_cb\fP (\fBt_lr_stack_item\fP *item)"
.br
.ti -1c
.RI "void * \fB_prod_progname_cb\fP (\fBt_lr_stack_item\fP *item)"
.br
.ti -1c
.RI "void * \fB_prod_command_io__1_cb\fP (\fBt_lr_stack_item\fP *item)"
.br
.ti -1c
.RI "void * \fB_prod_command_io__2_cb\fP (\fBt_lr_stack_item\fP *item)"
.br
.ti -1c
.RI "void * \fB_prod_io_info_cb\fP (\fBt_lr_stack_item\fP *item)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The LR rule definition\&. 


.PP
\fBAuthor\fP
.RS 4
ale-boud (ale-boud@student.42.fr) 
.RE
.PP
\fBDate\fP
.RS 4
2023-11-29 
.RE
.PP
\fBCopyright\fP
.RS 4
Copyright (c) 2023 
.RE
.PP

.SH "Typedef Documentation"
.PP 
.SS "typedef void *(* t_prod_cb) (\fBt_lr_stack_item\fP *item)"

.SS "typedef enum \fBe_prod_id\fP \fBt_prod_id\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBe_prod_id\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIPROD_COMMAND \fP\fP
.TP
\fB\fIPROD_COMMAND_SIMPLE__1 \fP\fP
.TP
\fB\fIPROD_COMMAND_SIMPLE__2 \fP\fP
.TP
\fB\fIPROD_ARGS__1 \fP\fP
.TP
\fB\fIPROD_ARGS__2 \fP\fP
.TP
\fB\fIPROD_PROGNAME \fP\fP
.TP
\fB\fIPROD_COMMAND_IO__1 \fP\fP
.TP
\fB\fIPROD_COMMAND_IO__2 \fP\fP
.TP
\fB\fIPROD_IO_INFO \fP\fP
.TP
\fB\fIPROD__COUNT \fP\fP
.SH "Function Documentation"
.PP 
.SS "void * _prod_args__1_cb (\fBt_lr_stack_item\fP * item)"

.SS "void * _prod_args__2_cb (\fBt_lr_stack_item\fP * item)"

.SS "void * _prod_command_cb (\fBt_lr_stack_item\fP * item)"

.SS "void * _prod_command_io__1_cb (\fBt_lr_stack_item\fP * item)"

.SS "void * _prod_command_io__2_cb (\fBt_lr_stack_item\fP * item)"

.SS "void * _prod_command_simple__1_cb (\fBt_lr_stack_item\fP * item)"

.SS "void * _prod_command_simple__2_cb (\fBt_lr_stack_item\fP * item)"

.SS "void * _prod_io_info_cb (\fBt_lr_stack_item\fP * item)"

.SS "void * _prod_progname_cb (\fBt_lr_stack_item\fP * item)"

.SH "Author"
.PP 
Generated automatically by Doxygen for renderobj from the source code\&.
